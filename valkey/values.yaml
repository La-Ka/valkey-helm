replicaCount: 1

image:
  repository: docker.io/valkey/valkey
  pullPolicy: IfNotPresent
  tag: ""

imagePullSecrets: []

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""


podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 6379

# This is for setting up a network policy more information can be found here: https://kubernetes.io/docs/concepts/services-networking/network-policies/
networkPolicy: {}

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
initResources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

storage:
  volumeName: valkey-data
  accessModes:
  - ReadWriteOnce
  annotations: {}
  className: null
  keepPvc: false
  labels: {}
  # persistentVolumeClaimName: null
  # requestedSize: null

extraValkeySecrets: []
extraValkeyConfigs: []
extraSecretValkeyConfigs: false
extraStorage: []
valkeyConfig: ""

auth:
  enabled: false
  aclConfig: |
    # Users and permissions can be defined here
    # Example:
    # user default off
    # user default on >defaultpassword ~* +@all 

nodeSelector: {}

tolerations: []

affinity: {}

valkeyLogLevel: "notice"

metrics:
  enabled: false
  exporter:
    extraExporterSecrets: []
 
env: {}

